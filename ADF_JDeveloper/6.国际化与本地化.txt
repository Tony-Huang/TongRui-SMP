1.基本概念
国际化：提供手段和方法可以使得产品被改造成适应于多个语言或文化的过程。比如，提供技术手段或者框架或者工具等可使得某个软件产品将来轻松得被汉化，英化，日化，韩化等等。

本地化：将产品改造成适应于某个语言或文化的过程。比如，在软件产品有了国际化支持的基础上，进行汉化，推出它相应的中文版,这中间包括了翻译的过程。

2.ADF国际化与本地化。

ADF界面组件自带的文本内容是ADF界面组件的一部分，要支持相应的语言，需要在faces-config.xml中添加对应的locale.faces-config.xml中可配多个locale.
ADF组件自带文本内容的显示判断依据是浏览器的语言设置.如果你的浏览器语言设置为中文，则自带文本显示为中文(前提是faces-config.xml中有zh_CN的配置项，当然ADF组件之前已经国际化，支持多语言),若faces-config.xml没有配中文的locale(zh_CN)则取默认locale对应文本(一般是英文).用户无需开发resourceBundle因为它已经自带.

开发者自己设置的界面组件的文本内容，由开发者自己写个resourceBundle文件来存储设置在组件上的文本。
1)如果你指定某个组件的文本的resourceBundle,而不修改faces-config.xml(注册resourceBundle,添加相应locale),则只会显示你指定的resourceBundle的内容,跟浏览器设置无关。
2)如果想要根据浏览器的语言设置来展示相应内容,工作开发者需要3部分工作：1）写你所支持的语言的resourceBundle 2)将你写的resourceBundle注册到faces-config.xml 3)在faces-config.xml再添加对应的locale.


如何在页面动态切换语言：




3. FAQ:
1)我将我的浏览器如firefox设置成中文，但是adf表格在取数据过程总仍显示fetching...而不是中文抓取...?
原因是你的应用中未在faces-config.xml中加中文的locale,而显示出英文是因为检查faces-config.xml发现你的应用没有配置中文locale,所以不查找对应的中文的resourceBundle(尽管adf表格的自带的resourcebundle中也有中文版).而找到英文的ResourceBundle,是因为那是默认的(即使你的faces-config.xml未配置任何locale)。
逻辑过程如下：
  a)检查浏览器语言设置
  b)检查faces-config.xml找对应语言的resourceBundle设置,
   b.1)如果未找到,则用adf表格这个组件的默认resourceBundle(English).
   b.2)如果找到，则再查找对应adf表格所带的resourceBundle ,如果找到则显示如果未找到则用默认的resourceBundle.

浏览器语言设置--->faces-config.xml可支持的locale设置--->组件的相应于浏览器语言的resourcelBundle
比如浏览器语言设置是zh_CN,ADF检查发现应用配置(faces-config.xml)可支持2种locale: zh_CN, zh_TW,en_US,于是再找应用中配置的resourceBundle发现有2个: myResBundle_zh_CN.properties和myResourceBundle_en.properties,而浏览器设置是zh_CN,于是找到myResBundle_zh_CN.properties,查找对应的key如果找到则取出显示（可能是对组件自带resourceBundle的覆盖override）如果未找到则再查找组件自带 resourceBundle 的xxx_zh_CN,未找到则用组件自带中默认的resourceBundle xxx

